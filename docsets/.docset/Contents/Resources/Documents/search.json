{"Other%20Structs.html#/s:8SwiftDux14NoUpdateActionV":{"name":"NoUpdateAction","abstract":"<p>Indicates a connectable view should not update when the state changes. The view will not subscribe to the store, and instead update"},"Protocols/CancellableAction.html#/s:8SwiftDux17CancellableActionP06sendAsC0y7Combine0C0_pyAA0D0_pXEF":{"name":"sendAsCancellable(_:)","abstract":"<p>Send an action that returns a cancellabe object.</p>","parent_name":"CancellableAction"},"Protocols/CancellableAction.html":{"name":"CancellableAction","abstract":"<p>An action that can return a cancellable object. Don&rsquo;t use this protocol directly."},"Extensions/RangeReplaceableCollection.html#/s:Sm8SwiftDuxSMRzSi5IndexSlRtzrlE6remove2aty10Foundation0C3SetV_tF":{"name":"remove(at:)","abstract":"<p>From user vadian at <a href=\"https://stackoverflow.com/a/50835467\">stackoverflows</a>","parent_name":"RangeReplaceableCollection"},"Extensions/RangeReplaceableCollection.html":{"name":"RangeReplaceableCollection"},"Enums/StoreAction.html#/s:8SwiftDux11StoreActionO7prepareyACyxGAEmlF":{"name":"prepare","abstract":"<p>Called at the initialization step of the store to allow reducers and middleware an oppertunity","parent_name":"StoreAction"},"Enums/StoreAction.html#/s:8SwiftDux11StoreActionO5resetyACyxGx_tcAEmlF":{"name":"reset(state:)","abstract":"<p>Reset the entire state of the application.</p>","parent_name":"StoreAction"},"Enums/StoreAction.html":{"name":"StoreAction","abstract":"<p>Actions performed for the store itself.</p>"},"Advanced.html#/s:8SwiftDux10Middlewarea":{"name":"Middleware","abstract":"<p>Middleware perform actions on the the store when actions are dispatched to it.</p>"},"Protocols/ParameterizedConnectable.html#/s:8SwiftDux24ParameterizedConnectableP10SuperstateQa":{"name":"Superstate","abstract":"<p>Undocumented</p>","parent_name":"ParameterizedConnectable"},"Protocols/ParameterizedConnectable.html#/s:8SwiftDux24ParameterizedConnectableP5StateQa":{"name":"State","abstract":"<p>Undocumented</p>","parent_name":"ParameterizedConnectable"},"Protocols/ParameterizedConnectable.html#/s:8SwiftDux24ParameterizedConnectableP9ParameterQa":{"name":"Parameter","abstract":"<p>Undocumented</p>","parent_name":"ParameterizedConnectable"},"Protocols/ParameterizedConnectable.html#/s:8SwiftDux24ParameterizedConnectableP10updateWhen6action4withSbAA6Action_p_9ParameterQztF":{"name":"updateWhen(action:with:)","abstract":"<p>Causes the view to be updated based on a dispatched action.</p>","parent_name":"ParameterizedConnectable"},"Protocols/ParameterizedConnectable.html#/s:8SwiftDux24ParameterizedConnectableP3map5state4with5StateQzSg10SuperstateQz_9ParameterQztF":{"name":"map(state:with:)","abstract":"<p>The method can return nil until the state becomes available. While it is nil, the view","parent_name":"ParameterizedConnectable"},"Protocols/ParameterizedConnectable.html#/s:8SwiftDux24ParameterizedConnectablePAA0A2UI4ViewRzrlE7connect4withQr9ParameterACQz_tF":{"name":"connect(with:)","abstract":"<p>Connect the view to the application state via a provided parameter</p>","parent_name":"ParameterizedConnectable"},"Protocols/Connectable.html#/s:8SwiftDux11ConnectableP10SuperstateQa":{"name":"Superstate","abstract":"<p>Undocumented</p>","parent_name":"Connectable"},"Protocols/Connectable.html#/s:8SwiftDux11ConnectableP5StateQa":{"name":"State","abstract":"<p>Undocumented</p>","parent_name":"Connectable"},"Protocols/Connectable.html#/s:8SwiftDux11ConnectableP10updateWhen6actionSbAA6Action_p_tF":{"name":"updateWhen(action:)","abstract":"<p>Causes the view to be updated based on a dispatched action.</p>","parent_name":"Connectable"},"Protocols/Connectable.html#/s:8SwiftDux11ConnectableP3map5state5StateQzSg10SuperstateQz_tF":{"name":"map(state:)","abstract":"<p>Map a superstate to the state needed by the view using the provided parameter.</p>","parent_name":"Connectable"},"Protocols/Connectable.html#/s:8SwiftDux11ConnectablePAA0A2UI4ViewRzrlE7connectQryF":{"name":"connect()","abstract":"<p>Connect the view to the application state</p>","parent_name":"Connectable"},"Structs/MappedDispatch.html#/s:8SwiftDux14MappedDispatchV12wrappedValueyyAA6Action_pcvp":{"name":"wrappedValue","abstract":"<p>Undocumented</p>","parent_name":"MappedDispatch"},"Structs/MappedDispatch.html#/s:8SwiftDux14MappedDispatchVACycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"MappedDispatch"},"Structs/MappedState.html#/s:8SwiftDux11MappedStateV12wrappedValuexvp":{"name":"wrappedValue","abstract":"<p>Undocumented</p>","parent_name":"MappedState"},"Structs/MappedState.html#/s:8SwiftDux11MappedStateV14projectedValue0A2UI7BindingVyxGvp":{"name":"projectedValue","abstract":"<p>Undocumented</p>","parent_name":"MappedState"},"Structs/MappedState.html#/s:8SwiftDux11MappedStateV7binding0A2UI7BindingVyxGvp":{"name":"binding","abstract":"<p>Undocumented</p>","parent_name":"MappedState"},"Structs/MappedState.html#/s:8SwiftDux11MappedStateVACyxGycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"MappedState"},"Extensions/View.html#/s:7SwiftUI4ViewP0A3DuxE13onAppearAsync7performQryyc_tF":{"name":"onAppearAsync(perform:)","abstract":"<p>Performs an action asynchronously on the main thread when a view appears.</p>","parent_name":"View"},"Extensions/View.html#/s:7SwiftUI4ViewP0A3DuxE16onDisappearAsync7performQryyc_tF":{"name":"onDisappearAsync(perform:)","abstract":"<p>Performs an action asynchronously on the main thread when a view appears.</p>","parent_name":"View"},"Extensions/View.html#/s:7SwiftUI4ViewP0A3DuxE8onAction7performQrAD0F0_pSgAdG_pc_tF":{"name":"onAction(perform:)","abstract":"<p>Fires when a child view dispatches an action.</p>","parent_name":"View"},"Extensions/View.html#/s:7SwiftUI4ViewP0A3DuxE8onAppear8dispatch17cancelOnDisappearQrAD6Action_p_SbtF":{"name":"onAppear(dispatch:cancelOnDisappear:)","abstract":"<p>Sends the provided action when the view appears. If an action plan is provided, it will send it as a cancellable plan.","parent_name":"View"},"Extensions/View.html#/s:7SwiftUI4ViewP0A3DuxE7connect10updateWhen8mapStateQrSbAD6Action_pc_qd_0_Sgqd__ctr0_lF":{"name":"connect(updateWhen:mapState:)","abstract":"<p>Connect the application state to the UI.</p>","parent_name":"View"},"Extensions/View.html#/s:7SwiftUI4ViewP0A3DuxE12provideStoreyQrAD0F0Cyqd__GSeRd__SERd__lF":{"name":"provideStore(_:)","abstract":"<p>Injects a store into the environment.</p>","parent_name":"View"},"Extensions/View.html":{"name":"View"},"Structs/MappedState.html":{"name":"MappedState","abstract":"<p>Retrieves a mapping of the application state from the environment and provides it to a property in a SwiftUI view."},"Structs/MappedDispatch.html":{"name":"MappedDispatch","abstract":"<p>Injects a function as a property in a view to dispatch actions to the provided store.</p>"},"Protocols/Connectable.html":{"name":"Connectable","abstract":"<p>Makes a view &ldquo;connectable&rdquo; to the application state.</p>"},"Protocols/ParameterizedConnectable.html":{"name":"ParameterizedConnectable","abstract":"<p>Makes a view &ldquo;connectable&rdquo; to the application state using a parameter value.</p>"},"Structs/StoreProxy.html#/s:8SwiftDux10StoreProxyV9didChange7Combine18PassthroughSubjectCyAA6Action_ps5NeverOGvp":{"name":"didChange","abstract":"<p>Subscribe to state changes.</p>","parent_name":"StoreProxy"},"Structs/StoreProxy.html#/s:8SwiftDux10StoreProxyV4sendyyAA6Action_pcvp":{"name":"send","abstract":"<p>Send an action to the store.</p>","parent_name":"StoreProxy"},"Structs/StoreProxy.html#/s:8SwiftDux10StoreProxyV4nextyyAA6Action_pcvp":{"name":"next","abstract":"<p>Send an action to the next middleware</p>","parent_name":"StoreProxy"},"Structs/StoreProxy.html#/s:8SwiftDux10StoreProxyV5statexSgvp":{"name":"state","abstract":"<p>Retrieves the latest state from the store.</p>","parent_name":"StoreProxy"},"Protocols/Reducer.html#/s:8SwiftDux7ReducerP5StateQa":{"name":"State","abstract":"<p>The type of state that the <code>Reducer</code> is able to mutate.</p>","parent_name":"Reducer"},"Protocols/Reducer.html#/s:8SwiftDux7ReducerP0C6ActionQa":{"name":"ReducerAction","abstract":"<p>The supported actions of a reducer.</p>","parent_name":"Reducer"},"Protocols/Reducer.html#/s:8SwiftDux7ReducerP6reduce5state6action5StateQzAH_0C6ActionQztF":{"name":"reduce(state:action:)","abstract":"<p>Operates on the state with the reducer&rsquo;s own actions, returning a fresh new copy of the state.</p>","parent_name":"Reducer"},"Protocols/Reducer.html#/s:8SwiftDux7ReducerP10reduceNext5state6action5StateQzAH_AA6Action_ptF":{"name":"reduceNext(state:action:)","abstract":"<p>Delegates an action to a subreducer.</p>","parent_name":"Reducer"},"Protocols/Reducer.html#/s:8SwiftDux7ReducerPAAE9reduceAny5state6action5StateQzAH_AA6Action_ptF":{"name":"reduceAny(state:action:)","abstract":"<p>Send any kind of action to a reducer. The recuder will determine what it can do with","parent_name":"Reducer"},"Classes/Store.html#/s:8SwiftDux5StoreC5statexvp":{"name":"state","abstract":"<p>The current state of the store. Use actions to mutate it.</p>","parent_name":"Store"},"Classes/Store.html#/s:8SwiftDux5StoreC9didChange7Combine18PassthroughSubjectCyAA6Action_ps5NeverOGvp":{"name":"didChange","abstract":"<p>Subscribe for state changes. It emits the latest action sent to the store.</p>","parent_name":"Store"},"Classes/Store.html#/s:8SwiftDux5StoreC5state7reducer10middlewareACyxGx_qd__SayyAA6Action_pcAA0C5ProxyVyxGcGtc5StateQyd__RszAA7ReducerRd__lufc":{"name":"init(state:reducer:middleware:)","abstract":"<p>Creates a new store for the given state and reducer</p>","parent_name":"Store"},"Classes/Store.html#/s:8SwiftDux5StoreC4sendyyAA6Action_pF":{"name":"send(_:)","abstract":"<p>Sends an action to the store to mutate its state.</p>","parent_name":"Store"},"Classes/Store.html#/s:8SwiftDux5StoreC5proxy12modifyAction04sentF0AA0F10Dispatcher_pAA0F0_pSgAaH_pcSg_yAaH_pcSgtF":{"name":"proxy(modifyAction:sentAction:)","abstract":"<p>Create a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ActionDispatcher.html\">ActionDispatcher</a></code> that acts as a proxy between the action sender and the store. It optionally allows actions to be","parent_name":"Store"},"Classes/Store.html":{"name":"Store","abstract":"<p>The primary container of an application&rsquo;s state.</p>"},"Protocols/Reducer.html":{"name":"Reducer","abstract":"<p>Performs an action on a given state and returns a whole new version.</p>"},"Structs/StoreProxy.html":{"name":"StoreProxy","abstract":"<p>Creates a proxy of the store object for use by middleware.</p>"},"Protocols/ActionDispatcher.html#/s:8SwiftDux16ActionDispatcherP4sendyyAA0C0_pF":{"name":"send(_:)","abstract":"<p>Sends an action to a reducer to mutate the state of the application.</p>","parent_name":"ActionDispatcher"},"Protocols/ActionDispatcher.html#/s:8SwiftDux16ActionDispatcherP5proxy06modifyC004sentC0AaB_pAA0C0_pSgAaG_pcSg_yAaG_pcSgtF":{"name":"proxy(modifyAction:sentAction:)","abstract":"<p>Create a new <code>ActionDispatcher</code> that acts as a proxy for the current one.</p>","parent_name":"ActionDispatcher"},"Protocols/ActionDispatcher.html#/s:8SwiftDux16ActionDispatcherPAA7Combine10SubscriberRzs5NeverO7FailureAdEPRtzAA0C0_p5InputAIRtzrlE7receiveyAD11SubscribersO6DemandVAaK_pF":{"name":"receive(_:)","abstract":"<p>Undocumented</p>","parent_name":"ActionDispatcher"},"Protocols/ActionDispatcher.html#/s:8SwiftDux16ActionDispatcherPAA7Combine10SubscriberRzs5NeverO7FailureAdEPRtzAA0C0_p5InputAIRtzrlE7receive10completionyAD11SubscribersO10CompletionOy_AGG_tF":{"name":"receive(completion:)","abstract":"<p>Undocumented</p>","parent_name":"ActionDispatcher"},"Protocols/ActionDispatcher.html#/s:8SwiftDux16ActionDispatcherPAA7Combine10SubscriberRzs5NeverO7FailureAdEPRtzAA0C0_p5InputAIRtzrlE7receive12subscriptionyAD12Subscription_p_tF":{"name":"receive(subscription:)","abstract":"<p>Undocumented</p>","parent_name":"ActionDispatcher"},"Structs/ActionPlan.html#/s:8SwiftDux10ActionPlanV4Bodya":{"name":"Body","abstract":"<p>The body of a publishable action plan.</p>","parent_name":"ActionPlan"},"Structs/ActionPlan.html#/s:8SwiftDux10ActionPlanVyACyxGqd__SgAA10StoreProxyVyxGcc7Combine9PublisherRd__s5NeverO7FailureRtd__AA0C0_p6OutputRtd__lufc":{"name":"init(_:)","abstract":"<p>Create a new action plan that returns an optional publisher.</p>","parent_name":"ActionPlan"},"Structs/ActionPlan.html#/s:8SwiftDux10ActionPlanVyACyxGyAA10StoreProxyVyxGccfc":{"name":"init(_:)","abstract":"<p>Create a new action plan.</p>","parent_name":"ActionPlan"},"Structs/ActionPlan.html#/s:8SwiftDux10ActionPlanV3runy7Combine12AnyPublisherVyAA0C0_ps5NeverOGSgAA10StoreProxyVyxGF":{"name":"run(_:)","abstract":"<p>Manually run the action plan.</p>","parent_name":"ActionPlan"},"Structs/ActionPlan.html#/s:8SwiftDux10ActionPlanV17sendAsCancellabley7Combine0G0_pyAA0C0_pXEF":{"name":"sendAsCancellable(_:)","abstract":"<p>Send an action plan that can be cancelled.</p>","parent_name":"ActionPlan"},"Actions.html#/s:8SwiftDux6ActionP":{"name":"Action","abstract":"<p>A dispatchable action that provides information to a reducer to mutate the state of the application.</p>"},"Structs/ActionPlan.html":{"name":"ActionPlan","abstract":"<p>Encapsulates multiple actions into a packaged up &ldquo;action plan&rdquo;</p>"},"Protocols/ActionDispatcher.html":{"name":"ActionDispatcher","abstract":"<p>An object that dispatches actions to a store.</p>"},"Actions.html#/s:8SwiftDux10SendActiona":{"name":"SendAction","abstract":"<p>A closure that dispatches an action.</p>"},"Actions.html#/s:8SwiftDux11EmptyActionV":{"name":"EmptyAction","abstract":"<p>A noop action used by reducers that may not have their own actions.</p>"},"Actions.html#/s:8SwiftDux14ActionModifiera":{"name":"ActionModifier","abstract":"<p>A closure that can return a new action from a previous one. If no action is returned,"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV2Ida":{"name":"Id","abstract":"<p>Undocumented</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:Sl5IndexQa":{"name":"Index","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV6valuesSayxGvp":{"name":"values","abstract":"<p>The substates as an ordered array</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV5countSivp":{"name":"count","abstract":"<p>The number of substates</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateVyACyxGSayxGcfc":{"name":"init(_:)","abstract":"<p>Create a new <code>OrderedState</code> with an ordered array of identifiable substates.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateVyACyxGxd_tcfc":{"name":"init(_:)","abstract":"<p>Create a new <code>OrderedState</code> with a variadic number of substates.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV4fromACyxGs7Decoder_p_tKcfc":{"name":"init(from:)","abstract":"<p>Decodes the <code>OrderState&lt;_&gt;</code> from an unkeyed container.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV6encode2toys7Encoder_p_tKF":{"name":"encode(to:)","abstract":"<p>Encodes the <code>OrderState&lt;_&gt;</code> as an unkeyed container of values.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV5value5forIdxSg2IDQz_tF":{"name":"value(forId:)","abstract":"<p>Retrieves a value by its id.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV6appendyyxF":{"name":"append(_:)","abstract":"<p>Append a new substate to the end of the <code>OrderedState</code>.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV7prependyyxF":{"name":"prepend(_:)","abstract":"<p>Prepend a new substate to the beginning of the <code>OrderedState</code>.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV6insert_2atyx_SitF":{"name":"insert(_:at:)","abstract":"<p>Inserts a new substate at the given index <code>OrderedState</code>.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV6insert10contentsOf2atyqd___Sit7ElementQyd__RszSlRd__lF":{"name":"insert(contentsOf:at:)","abstract":"<p>Inserts a collection of substates at the given index <code>OrderedState</code>.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV6remove5forIdy2IDQz_tF":{"name":"remove(forId:)","abstract":"<p>Removes a substate for the given id.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV6remove2atySi_tF":{"name":"remove(at:)","abstract":"<p>Removes a substate at a given index.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV6remove2aty10Foundation8IndexSetV_tF":{"name":"remove(at:)","abstract":"<p>Removes substates at the provided indexes.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV4move4from2toy10Foundation8IndexSetV_SitF":{"name":"move(from:to:)","abstract":"<p>Moves a set of substates at the specified indexes to a new index position.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV4sort2byySbx_xtXE_tF":{"name":"sort(by:)","abstract":"<p>Resorts the order of substates with the given sort operation.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV6sorted2byACyxGSbx_xtXE_tF":{"name":"sorted(by:)","abstract":"<p>Returns an <code>OrderedState</code> with the new sort order.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV6filterySayxGSbxXEF":{"name":"filter(_:)","abstract":"<p>Filters the substates using a predicate.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV10startIndexSivp":{"name":"startIndex","abstract":"<p>The starting index of the collection.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV8endIndexSivp":{"name":"endIndex","abstract":"<p>The last index of the collection.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateVyxSicip":{"name":"subscript(_:)","abstract":"<p>Subscript based on the index of the substate.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateVyxSg2IDQzcip":{"name":"subscript(_:)","abstract":"<p>Subscript based on the id of the substate.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV12makeIterators08IndexingF0VySayxGGyF":{"name":"makeIterator()","abstract":"<p>Create an ordered iterator of the substates.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV5index5afterS2i_tF":{"name":"index(after:)","abstract":"<p>Get the index of a substate after a sibling one.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:8SwiftDux12OrderedStateV5index5after2IDQzAG_tF":{"name":"index(after:)","abstract":"<p>Get the id of a substate directly after a sibling one.</p>","parent_name":"OrderedState"},"Structs/OrderedState.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"OrderedState"},"Protocols/IdentifiableState.html#/s:8SwiftDux17IdentifiableStatePAAE9hashValueSivp":{"name":"hashValue","abstract":"<p>The hash value of the state based on the id.</p>","parent_name":"IdentifiableState"},"Protocols/IdentifiableState.html#/s:8SwiftDux17IdentifiableStatePAAE4hash4intoys6HasherVz_tF":{"name":"hash(into:)","abstract":"<p>Applies the hash of the id to the hasher.</p>","parent_name":"IdentifiableState"},"State.html#/s:8SwiftDux9StateTypea":{"name":"StateType","abstract":"<p>Represents some kind of state in the application.</p>"},"Protocols/IdentifiableState.html":{"name":"IdentifiableState","abstract":"<p>A type of state that can be identified for tracking purposes.</p>"},"Structs/OrderedState.html":{"name":"OrderedState","abstract":"<p>A container state that holds an ordered collection of substates.</p>"},"installation.html":{"name":"Installation"},"getting-started.html":{"name":"Getting Started"},"composing-reducers.html":{"name":"Composing Reducers"},"swiftui-list-support.html":{"name":"SwiftUI List Support"},"persisting-state.html":{"name":"Persisting State"},"Documentation.html":{"name":"Documentation"},"State.html":{"name":"State"},"Actions.html":{"name":"Actions"},"Store.html":{"name":"Store"},"SwiftUI.html":{"name":"SwiftUI"},"Advanced.html":{"name":"Advanced"},"Other%20Enums.html":{"name":"Other Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Other%20Extensions.html":{"name":"Other Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Other%20Protocols.html":{"name":"Other Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Other%20Structs.html":{"name":"Other Structures","abstract":"<p>The following structures are available globally.</p>"}}